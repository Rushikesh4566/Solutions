***Create a field on Account named "Number of Contacts". Populate this field with the number of contacts related to an account. 

trigger getCount on Contact(after insert, after delete, after undelete){
set<Id> accId = new Set<Id>();
if(trigger.isInsert || trigger.isUndelete){
for(Contact con: Trigger.new){
accId.add(con.AccounId);
}
updateAcc(accId);
}

else if(trigger.isDelete){
for(Contact con : Trigger.old){
accId.add(con.AccounId);
}
updateAcc(accId);
}

private void updateAcc(set<Id> accId1){
List<Account> accList = [select id, TotalCount from Account where Id IN : accId];
List<Contact> conList = [select Id from contact where AccounId IN : accId1];
for(Account a: accList){
a.totalCount = conList.size();
}
update accList;
}
}

-----------------------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------------------


***Build a basic lightning component that can query a list of 10 most recently created accounts and display it using a lightning app. 

HTML--
<template>
    <table>
        <tbody>
            <template for:each={accountList} for:item="account">
                <tr key={account.Id}>
                    <td>{account.Name}</td>
                    <td>{account.CreatedDate}</td>
                </tr>
            </template>
        </tbody>
    </table>
</template>

JS--
import { LightningElement, wire } from 'lwc';
import getRecentAccounts from '@salesforce/apex/AccountController.getRecentAccounts';

export default class AccountList extends LightningElement {
    accountList;

    @wire(getRecentAccounts)
    wiredAccounts({ error, data }) {
        if (data) {
            this.accountList = data;
        } else if (error) {
            console.error(error);
        }
    }
}

XML--
<LightningComponentBundle xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>53.0</apiVersion>
    <isExposed>true</isExposed>
    <targets>
        <target>lightning__AppPage</target>
		<target>lightning__RecordPage</target>
		<target>lightning__HomePage</target>
    </targets>
</LightningComponentBundle>


Apex Code--
public with sharing class AccountController {
    @AuraEnabled(cacheable=true)
    public static List<Account> getRecentAccounts() {
        return [SELECT Name, CreatedDate FROM Account ORDER BY CreatedDate DESC LIMIT 10];
    }
}

-------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------------------------------


*** Make a basic http callout and print the result using system.debug


Http http = new Http();
HttpRequest request = new HttpRequest();
request.setEndpoint('https://postman-echo.com/get?foo1=bar1&foo2=bar2');
request.setMethod('GET');
HttpResponse response = http.send(request);
System.debug(response.getBody());































